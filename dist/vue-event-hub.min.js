!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("VueEventHub",[],t):"object"==typeof exports?exports.VueEventHub=t():e.VueEventHub=t()}(this,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=void 0;function r(e){if(o)console.warn("[VueEventHub] already installed. Vue.use(VueEventHub) should be called only once.");else{var t=new(o=e)({data:{events:{}}});Object.defineProperties(t,{on:{get:function(){return n}},emit:{get:function(){return t.$emit}},off:{get:function(){return r}}}),Object.defineProperty(o.prototype,"$eventHub",{get:function(){return t}}),o.eventHub=t}function n(e,n){if("[object String]"!==Object.prototype.toString.call(e)||"[object Function]"!==Object.prototype.toString.call(n))throw"event必须为字符串，callback必须为函数 --eventHub.on";"[object Array]"!==Object.prototype.toString.call(t.events[e])&&(t.events[e]=[]);var o=t.events[e];-1===o.indexOf(n)?(o.push(n),t.$on(e,n)):console.log(e+"事件已经监听"+n+"函数 --eventHub.on")}function r(e,n,o){var r=void 0,u=void 0;if(o)"[object String]"===Object.prototype.toString.call(e)?(r=t.events[e],"[object Array]"===Object.prototype.toString.call(r)&&("[object Function]"===Object.prototype.toString.call(n)?-1!==(u=r.indexOf(n))&&(r.splice(u,1),t.$off(e,n)):(t.events[e]=[],t.$off(e)))):(t.events={},t.$off());else{if("[object String]"!==Object.prototype.toString.call(e)||"[object Function]"!==Object.prototype.toString.call(n))throw"event必须为字符串，callback必须为函数，如果想移除全部事件或某事件的全部监听函数，请传force为真 --eventHub.off";r=t.events[e],"[object Array]"===Object.prototype.toString.call(r)?-1===(u=r.indexOf(n))?console.log(e+"事件没有监听"+n+"函数 --eventHub.off"):(r.splice(u,1),t.$off(e,n)):console.log("没有"+e+"事件 --eventHub.off")}}}"undefined"!=typeof window&&window.Vue&&r(window.Vue);var u={install:r};t.default=u}])});